//first uart
module uart_tx(
  input wire clk,
  input wire reset,
  input wire [7:0] data,
  input wire tx_start,
  output reg tx,
  output reg tx_done
);
  
  //baud rate 9600 with 100M
  //CLKS_PER_BIT = 100MHz/9600 = 10,416.67
  parameter CLKS_PER_BI = 10417;
  //baud rate 115200 with 100MHz
  //CLKS_PER_BIT = 100MHz/115200 = 868
  //parameter CLKS_PER_BI = 868;
  
  reg [1:0] counter=0;
  reg [3:0] bit_counter =0;
  reg [7:0] tx_data=0;
  reg [1:0] state=0;
  
  always @(posedge clk or posedge reset) begin
    if(reset)begin
      tx<=1'b1;
      tx_done <=0;
      counter <=0;
      bit_counter <=0;
      state <=0;
    end
    else begin
      case(state)
        0://IDLE state
          if(tx_start)begin
            tx_data<=data;
            tx<=1'b0;
            counter<=0;
            bit_counter<=0;
            state<=1;
            tx_done<=0;
          end
        1://Transmission data bits
          if(counter == CLKS_PER_BIT -1)begin
            counter<=0;
            if(bit_counter <8)begin
              tx<=tx_data [bit_counter];
              bit_counter <=bit_counter +1;
            end else begin
              tx<=1'b1;//stop bit one (1)
              state<=2;
            end
          end else begin
            counter<=counter+1;
          end
        
        2://stop bit
          if(counter == CLKS_PER_BIT -1)begin
            counter <=0;
            state<=0;
            tx_done<=1'b1;
          end else begin
            counter <=counter+1;
          end
       endcase
    end
  end
endmodule
          
